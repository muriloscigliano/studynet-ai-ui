---
const { title = "StudyNet.AI" } = Astro.props;
---
<html lang="en" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <style is:global>
      @import "../styles/global.css";
    </style>
  </head>
  <body>
    <slot />
    <script>
      (function () {
        const root = document.documentElement;
        const storageKey = 'themePreference'; // 'light' | 'dark' | 'system'
        const mql = window.matchMedia('(prefers-color-scheme: light)');

        function resolveMode(source: string) {
          if (source === 'system') return mql.matches ? 'light' : 'dark';
          return source;
        }

        function applyTheme(source: string) {
          const mode = resolveMode(source);
          root.dataset.theme = mode;
        }

        let pref = localStorage.getItem(storageKey) || 'system';
        applyTheme(pref);

        // If following system, react to OS changes
        mql.addEventListener('change', () => {
          const current = localStorage.getItem(storageKey) || 'system';
          if (current === 'system') applyTheme('system');
        });

        function updateToggleButtons() {
          const mode = root.dataset.theme;
          document.querySelectorAll('.theme-toggle-btn').forEach((btn) => {
            const btnTheme = btn.getAttribute('data-theme');
            if (btnTheme === mode) {
              btn.classList.add('active');
            } else {
              btn.classList.remove('active');
            }
          });
        }

        document.addEventListener('click', function (e) {
          const t = e.target;
          if (!(t instanceof Element)) return;
          
          // Handle theme toggle buttons
          const themeBtn = t.closest('.theme-toggle-btn');
          if (themeBtn) {
            const targetTheme = themeBtn.getAttribute('data-theme');
            if (targetTheme) {
              localStorage.setItem(storageKey, targetTheme);
              applyTheme(targetTheme);
              updateToggleButtons();
            }
          }
        });

        // Initial button state
        updateToggleButtons();
      })();
    </script>
  </body>
</html>