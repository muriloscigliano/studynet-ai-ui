---
import Layout from "../layouts/Layout.astro";
import AppShell from "../components/AppShell.astro";
import Header from "../components/Header.astro";
import PageAnimations from "../components/PageAnimations";
import AnimatedText from "../components/AnimatedText";
import SettingsItem from "../components/SettingsItem";

// Page content
const pageTitle = "Settings â€” StudyNet.AI";

// Hero section
// const heroPill = "Settings";
const heroTitle = "Manage Your Account";
const heroSubtitle = "Customize your experience and manage your preferences";

// Account Section
const accountSection = {
  title: "Account",
  items: [
    {
      label: "Name",
      value: "John Doe",
      type: "input" as const
    },
    {
      label: "Email",
      value: "john.doe@example.com",
      type: "input" as const
    },
    {
      label: "Plan",
      value: "Free Plan",
      type: "action" as const,
      action: "Upgrade to Pro",
      isPrimary: true
    },
    {
      label: "Payment Method",
      value: "No payment method added",
      type: "action" as const,
      action: "Add Payment"
    }
  ]
};

// Preferences Section
const preferencesSection = {
  title: "Preferences",
  items: [
    {
      label: "Language",
      value: "English",
      type: "select" as const,
      options: ["English", "Spanish", "French", "German", "Portuguese"]
    },
    {
      label: "Theme Mode",
      value: "System",
      type: "select" as const,
      options: ["System", "Dark", "Light"]
    },
    {
      label: "Email Notifications",
      value: true,
      type: "toggle" as const
    },
    {
      label: "Marketing Emails",
      value: false,
      type: "toggle" as const
    }
  ]
};

// Personalization Section
const personalizationSection = {
  title: "Personalization",
  items: [
    {
      label: "About Me",
      value: "I'm a student looking to pursue higher education in Computer Science. I'm interested in AI and machine learning, and I'd love to study in Australia or the UK.",
      type: "textarea" as const,
      placeholder: "Tell us about yourself, your goals, and what you're looking for..."
    },
    {
      label: "Study Goal",
      value: "Undergraduate Degree",
      type: "select" as const,
      options: ["Undergraduate Degree", "Graduate Degree", "Certificate", "Language Course", "Exchange Program"]
    },
    {
      label: "Country of Interest",
      value: "Australia",
      type: "select" as const,
      options: ["Australia", "United States", "United Kingdom", "Canada", "Germany", "Other"]
    }
  ]
};
---
<Layout title={pageTitle}>
  <AppShell>
    <Header />

    <section class="center container-max">
      <div class="hero-header">
        <!-- <div class="plan-pill">{heroPill}</div> -->
        <div class="hero-title">
          <AnimatedText text={heroTitle} className="headline" delay={0.2} client:load />
          <AnimatedText text={heroSubtitle} className="subcopy" delay={0.4} client:load />
        </div>
      </div>

      <div class="settings-content">
        <!-- Account Section -->
        <div class="settings-section">
          <h2 class="settings-section-title">{accountSection.title}</h2>
          <div class="settings-list">
            {accountSection.items.map((item) => (
              <SettingsItem
                label={item.label}
                value={item.value}
                type={item.type}
                options={'options' in item ? (item.options as string[]) : undefined}
                action={'action' in item ? item.action : undefined}
                isPrimary={'isPrimary' in item ? item.isPrimary : undefined}
                client:load
              />
            ))}
          </div>
        </div>

        <!-- Preferences Section -->
        <div class="settings-section">
          <h2 class="settings-section-title">{preferencesSection.title}</h2>
          <div class="settings-list">
            {preferencesSection.items.map((item) => (
              <SettingsItem
                label={item.label}
                value={item.value}
                type={item.type}
                options={item.options}
                client:load
              />
            ))}
          </div>
        </div>

        <!-- Personalization Section -->
        <div class="settings-section">
          <h2 class="settings-section-title">{personalizationSection.title}</h2>
          <div class="settings-list">
            {personalizationSection.items.map((item) => (
              <SettingsItem
                label={item.label}
                value={item.value}
                type={item.type}
                options={item.options}
                placeholder={item.placeholder}
                client:load
              />
            ))}
          </div>
        </div>
      </div>
    </section>
    <PageAnimations client:load />
  </AppShell>
</Layout>

