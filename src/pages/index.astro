---
import Layout from "../layouts/Layout.astro";
import AppShell from "../components/AppShell.astro";
import Header from "../components/Header.astro";
import ChatInterface from "../components/ChatInterface";
import PageAnimations from "../components/PageAnimations";
import AnimatedText from "../components/AnimatedText";
import { ArrowUp } from "lucide-react";

const suggestions = [
  "Top Universities In Australia",
  "How Apply Course",
  "How To Apply As An International Student",
  "Best Degrees For My Career Goals",
  "Scholarships And Funding Options",
];

const copyItems = [
  "Free Plan",
  "Learn Better. Apply Smarter.",
  "Ask anything about universities, careers, or study options. I'll help you explore and apply.",
];

const buttonItems = [
  "Upgrade Pro Plan",
  "Login",
];
---
<Layout title="StudyNet">
  <AppShell>
    <Header loginText={buttonItems[1]} />

    <section class="center container-max chat-page">
      <div class="hero-header" id="hero-header">
        <div class="plan-pill">{copyItems[0]}</div>
        <div class="hero-title">
          <AnimatedText text={copyItems[1]} className="headline" delay={0.2} client:load />
          <AnimatedText text={copyItems[2]} className="subcopy" delay={0.4} client:load />
        </div>
      </div>

      <ChatInterface client:load suggestions={suggestions} />
    </section>

    <div class="cta-row" id="cta-row">
      <button class="cta" data-navigate="/pricing">
        <span>{buttonItems[0]}</span>
        <span class="chip-icon">
          <ArrowUp width={16} height={16} strokeWidth={2} style={{ color: 'var(--text)' }} />
        </span>
      </button>
    </div>

    <PageAnimations client:load />
  </AppShell>
</Layout>

<script>
  // Listen for first message event to hide hero content
  document.addEventListener('chat:firstMessage', () => {
    const heroHeader = document.getElementById('hero-header');
    const ctaRow = document.getElementById('cta-row');
    
    if (heroHeader) {
      heroHeader.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
      heroHeader.style.opacity = '0';
      heroHeader.style.transform = 'translateY(-20px)';
      setTimeout(() => {
        heroHeader.style.display = 'none';
      }, 300);
    }
    
    if (ctaRow) {
      ctaRow.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
      ctaRow.style.opacity = '0';
      ctaRow.style.transform = 'translateY(20px)';
      setTimeout(() => {
        ctaRow.style.display = 'none';
      }, 300);
    }
  });
</script>
